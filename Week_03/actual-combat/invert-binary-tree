/**
 * 226. 翻转二叉树
 * leetcode地址: https://leetcode-cn.com/problems/invert-binary-tree/
 */
//代码实现(go语言)-递归
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func invertTree(root *TreeNode) *TreeNode {
    res := root
    res = rec(root)

    return res
}

func rec(node *TreeNode) *TreeNode {
    if node == nil {
        return node
    }
    left := rec(node.Left)
    right := rec(node.Right)
    node.Left = right
    node.Right = left

    return node
}
//代码优化
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func invertTree(root *TreeNode) *TreeNode {
    if root == nil {
        return nil
    }
    root.Left, root.Right = root.Right, root.Left
    invertTree(root.Left)
    invertTree(root.Right)

    return root
}
