/**
 * 78. 子集
 * leetcode地址: https://leetcode-cn.com/problems/subsets/
 */
//代码实现(go)-迭代法
func subsets(nums []int) [][]int {
    res := [][]int{}
    res = append(res, []int{})
    for _, nv := range nums {
        tmps := [][]int{}
        for _, rv := range res {
            tmps = append(tmps, append(rv, nv))
        }
        for _, tv := range tmps {
            res = append(res, append([]int{}, tv...))
        }
    }

    return res
}
//回溯法
func subsets(nums []int) [][]int {
    res, numsLen := [][]int{}, len(nums)
    for i := 0; i <= numsLen; i++ {
        backTrace(0, i, numsLen, nums, []int{}, &res)
    }

    return res
}

func backTrace(start, length, n int, nums, curr []int, res *[][]int) {
    if len(curr) == length {
        *res = append(*res, append([]int{}, curr...))
        return
    }
    for i := start; i < n; i++ {
        curr = append(curr, nums[i])
        backTrace(i + 1, length, n, nums, curr, res)
        curr = curr[:len(curr) - 1]
    }
}
