/**
 * 589. N叉树的前序遍历
 * leetcode地址: https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/
 */
//代码实现(go语言实现)-递归
/**
 * Definition for a Node.
 * type Node struct {
 *     Val int
 *     Children []*Node
 * }
 */

func preorder(root *Node) []int {
    res := []int{}
    gen(root, &res)
    return res
}

func gen(node *Node, res *[]int) {
    if node != nil {
        *res = append(*res, node.Val)
        for _, node := range node.Children {
            gen(node, res)
        }
    }
}
//栈实现
/**
 * Definition for a Node.
 * type Node struct {
 *     Val int
 *     Children []*Node
 * }
 */

func preorder(root *Node) []int {
    res, stack := []int{}, []*Node{}
    stack = append(stack, root)
    for len(stack) > 0 {
        node := stack[len(stack) - 1]
        stack = stack[:len(stack) - 1]
        if node != nil {
            res = append(res, node.Val)
            for i := len(node.Children) - 1; i >= 0; i-- {
                stack = append(stack, node.Children[i])
            }
        }
    }

    return res
}
