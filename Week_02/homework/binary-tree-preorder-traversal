/**
 * 144. 二叉树的前序遍历
 * leetcode地址: https://leetcode-cn.com/problems/binary-tree-preorder-traversal/
 */
//代码实现(go语言实现)
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func preorderTraversal(root *TreeNode) []int {
    res := []int{}
    gen(&res, root)
    return res
}

func gen(res *[]int, node *TreeNode) {
    if node != nil {
        *res = append(*res, node.Val)
        gen(res, node.Left)
        gen(res, node.Right)
    }
}
//栈实现
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func preorderTraversal(root *TreeNode) []int {
    node, res, stack := root, []int{}, []*TreeNode{}
    for node != nil || len(stack) > 0 {
        if node != nil {
            res = append(res, node.Val)
            stack = append(stack, node.Right)
            stack = append(stack, node.Left)
        }
        node = stack[len(stack) - 1]
        stack = stack[:len(stack) - 1]
    }
    return res
}
