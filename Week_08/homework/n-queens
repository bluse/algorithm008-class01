/**
 * 51. N皇后
 * leetcode地址: https://leetcode-cn.com/problems/n-queens/
 */
//java实现
class Solution {
    public List<List<String>> res = new ArrayList<>();

    public List<List<String>> solveNQueens(int n) {
        char[][] board = new char[n][n];
        for (int i = 0; i < n; i++) {
            Arrays.fill(board[i], '.');
        }
        backTrace(board, 0, n);
        return res;
    }

    public void backTrace(char[][] board, int row, int n) {
        if (row == n) {
            List<String> solution = new ArrayList<>();
            for (int i = 0; i < n; i++) {
                solution.add(new String(board[i]));
            }
            res.add(solution);
        } else {
            for (int j = 0; j < n; j++) {
                if (isValid(board, row, j, n)) {
                    board[row][j] = 'Q';
                    backTrace(board, row + 1, n);
                    board[row][j] = '.';
                }
            }
        }
    }

    public boolean isValid(char[][] board, int row, int col, int n) {
        int left = col - 1, right = col + 1;
        for (int i = row - 1; i >= 0; i--) {
            if (board[i][col] == 'Q') return false;
            if (left >= 0 && board[i][left--] == 'Q') return false;
            if (right < n && board[i][right++] == 'Q') return false;
        }
        return true;
    }
}
