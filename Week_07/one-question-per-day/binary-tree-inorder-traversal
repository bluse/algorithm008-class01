/**
 * 94. 二叉树的中序遍历
 * leetcode地址: https://leetcode-cn.com/problems/binary-tree-inorder-traversal/
 */
//java递归实现
class Solution {

    public List<Integer> res = new ArrayList<>();

    public List<Integer> inorderTraversal(TreeNode root) {
        recur(root);
        return res;
    }

    public void recur(TreeNode node) {
        if (node == null) {
            return;
        }
        recur(node.left);
        res.add(node.val);
        recur(node.right);
    }
}
//栈实现
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        Stack<TreeNode> stack = new Stack<>();
        TreeNode curr = root;
        while (curr != null || !stack.isEmpty()) {
            while (curr != null) {
                stack.push(curr);
                curr = curr.left;
            }
            curr = stack.pop();
            res.add(curr.val);
            curr = curr.right;
        }
        return res;
    }
}
