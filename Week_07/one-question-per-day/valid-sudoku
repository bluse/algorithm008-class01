/**
 * 36. 有效的数独
 * leetcode地址: https://leetcode-cn.com/problems/valid-sudoku/
 */
//常规实现
class Solution {
    public boolean isValidSudoku(char[][] board) {
        HashMap<Character, Integer> [] rows = new HashMap[9];
        HashMap<Character, Integer> [] columns = new HashMap[9];
        for (int i = 0; i < 9; i++) {
            rows[i] = new HashMap<Character, Integer>();
            columns[i] = new HashMap<Character, Integer>();
        }
        for (int i = 0; i < 7; i += 3) {
            for (int j = 0; j < 7; j += 3) {
                Map<Character, Integer> block = new HashMap<Character, Integer>();
                for (int m = i; m < i + 3; m++) {
                    for (int n = j; n < j + 3; n++) {
                        if (board[m][n] == '.') continue;
                        if (block.containsKey(board[m][n]) || rows[m].containsKey(board[m][n]) || columns[n].containsKey(board[m][n])) return false;
                        block.put(board[m][n], 1);
                        rows[m].put(board[m][n], 1);
                        columns[n].put(board[m][n], 1);
                    }
                }
            }
        }
        return true;
    }
}
