/**
 * 529. 扫雷游戏
 * leetcode地址: https://leetcode-cn.com/problems/minesweeper/
 */
//代码实现(java)-dfs
class Solution {
    public char[][] updateBoard(char[][] board, int[] click) {
        if (board[click[0]][click[1]] == 'M') {
            board[click[0]][click[1]] = 'X';
            return board;
        }
        int[][] moveable = new int[][]{{1,0}, {-1,0}, {0,1}, {0,-1}, {1,1}, {1,-1}, {-1,1}, {-1,-1}};
        dfs(board, click[0], click[1], moveable);

        return board;
    }

    public void dfs(char[][] board, int x, int y, int[][] moveable) {
        if (x < 0 || x >= board.length || y < 0 || y >= board[0].length) {
            return;
        }
        if (board[x][y] == 'E') {
            board[x][y] = 'B';
            int count = getCount(board, x, y, moveable);
            if (count == 0) {
                for (int i = 0; i < 8; i++) {
                    dfs(board, x + moveable[i][0], y + moveable[i][1], moveable);
                }
            } else {
                board[x][y] = (char) (count + '0');
            }
        }
    }

    public int getCount(char[][] board, int x, int y, int[][] moveable) {
        int count = 0;
        for (int i = 0; i < 8; i++) {
            int nx = x + moveable[i][0];
            int ny = y + moveable[i][1];
            if (nx >= 0 && nx < board.length && ny >= 0 && ny < board[0].length && board[nx][ny] == 'M') count++;
        }

        return count;
    }
}
