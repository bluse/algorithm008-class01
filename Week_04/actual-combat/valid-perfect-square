/**
 * 367. 有效的完全平方数
 * leetcode地址: https://leetcode-cn.com/problems/valid-perfect-square/
 */
//代码实现(go)-二分查找法
func isPerfectSquare(num int) bool {
    ret, left, right := false, 0, num
    for left <= right {
        pivot := left + (right - left) / 2
        sqrt := pivot * pivot
        if sqrt > num {
            right = pivot - 1
        } else if sqrt < num {
            left = pivot + 1
        } else {
            ret = true
            break
        }
    }

    return ret
}
//牛顿迭代法
func isPerfectSquare(num int) bool {
    ret, x0 := false, num
    for x0 * x0 > num {
        x0 = (x0 + num / x0) / 2
    }
    if x0 * x0 == num {
        ret = true
    }
    
    return ret
}
